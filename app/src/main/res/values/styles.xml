<resources xmlns:tools="http://schemas.android.com/tools">

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.MaterialComponents.Light.NoActionBar">
        <item name="colorPrimary">@color/colorPrimaryLight</item>
        <item name="colorPrimaryDark">@color/colorSecondaryLight</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="backgroundColor">@color/backgroundLight</item>
        <item name="textColor">@android:color/black</item>
        <item name="colorSecondaryDark">@color/colorSecondaryLight</item>
        <item name="windowNoTitle">true</item>
        <item name="android:windowLightStatusBar" tools:targetApi="m">true</item>
        <item name="android:divider">@color/dividerLight</item>
        <item name="android:titleTextAppearance">@style/ToolbarTypefaceLight</item>
        <item name="subtitleTextColor">@color/subtitleTextColorLight</item>
        <item name="editTextColor">@color/textDisabledLight</item>
        <item name="boxStrokeColor">@color/textDisabledLight</item>
        <item name="textInputStyle">@style/Widget.App.TextInputLayout</item>
    </style>

    <style name="AppThemeDark" parent="Theme.MaterialComponents.NoActionBar">
        <item name="colorPrimary">@color/colorPrimaryDark</item>
        <item name="colorPrimaryDark">@color/colorSecondaryDark</item>
        <item name="colorSecondaryDark">@color/colorSecondaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="backgroundColor">@color/backgroundDark</item>
        <item name="textColor">@android:color/white</item>
        <item name="windowNoTitle">true</item>
        <item name="android:windowLightStatusBar" tools:targetApi="m">false</item>
        <item name="android:divider">@color/dividerDark</item>
        <item name="android:titleTextAppearance">@style/ToolbarTypefaceDark</item>
        <item name="subtitleTextColor">@color/subtitleTextColorDark</item>
        <item name="editTextColor">@android:color/holo_blue_light</item>
        <item name="boxStrokeColor">@color/textDisabledDark</item>
        <item name="textInputStyle">@style/Widget.App.TextInputLayout</item>
    </style>

    <style name="Widget.App.TextInputLayout" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <item name="materialThemeOverlay">@style/ThemeOverlay.App.TextInputLayout</item>
        <item name="shapeAppearance">@style/ShapeAppearance.App.SmallComponent</item>
        <item name="hintTextColor">?attr/colorOnSurface</item>
    </style>

    <style name="ThemeOverlay.App.TextInputLayout" parent="">
        <item name="colorPrimary">@color/colorAccent</item>  //Activated color
        <item name="colorOnSurface">?attr/textColor</item>    //Normal color
        <item name="colorError">@android:color/holo_red_light</item>        //Error color

        //Text Appearance styles
        <item name="textAppearanceSubtitle1">@style/TextAppearance.App.Subtitle1</item>
        <item name="textAppearanceCaption">@style/TextAppearance.App.Caption</item>

        <!--Note: When setting a materialThemeOverlay on a custom TextInputLayout style, don’t forget to set editTextStyle to either a @style/Widget.MaterialComponents.TextInputEditText.* style or to a custom one that inherits from that.
        The TextInputLayout styles set materialThemeOverlay that overrides editTextStyle with the specific TextInputEditText style needed. Therefore, you don’t need to specify a style tag on the edit text.-->
        <item name="editTextStyle">@style/Widget.MaterialComponents.TextInputEditText.OutlinedBox</item>
    </style>

    <style name="TextAppearance.App.Subtitle1" parent="TextAppearance.MaterialComponents.Subtitle1">
        <item name="fontFamily">@font/product_sans</item>
        <item name="android:fontFamily">@font/product_sans</item>
    </style>

    <style name="TextAppearance.App.Caption" parent="TextAppearance.MaterialComponents.Caption">
        <item name="fontFamily">@font/product_sans</item>
        <item name="android:fontFamily">@font/product_sans</item>
    </style>

    <style name="ShapeAppearance.App.SmallComponent" parent="ShapeAppearance.MaterialComponents.SmallComponent">
        <item name="cornerFamily">cut</item>
        <item name="cornerSize">4dp</item>
    </style>

    <style name="TextLabel" parent="TextAppearance.AppCompat">
        <!-- Hint color and label color in FALSE state -->
        <item name="android:textColorHint">@android:color/black</item>
        <item name="android:textSize">20sp</item>
        <!-- Label color in TRUE state and bar color FALSE and TRUE State -->
        <item name="colorControlNormal">@android:color/black</item>
        <item name="colorControlActivated">@color/colorAccent</item>
    </style>

    <style name="ToolbarTypefaceLight" >
        <item name="android:fontStyle" tools:targetApi="o">@font/product_sans_bold</item>
        <item name="android:textSize">@dimen/h6_size</item>
        <item name="android:textColor">@android:color/black</item>
    </style>

    <style name="ToolbarTypefaceDark" >
        <item name="android:fontStyle" tools:targetApi="o">@font/product_sans_bold</item>
        <item name="android:textSize">@dimen/h6_size</item>
        <item name="android:textColor">@android:color/white</item>
    </style>

    <style name="AppTheme.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />

    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />

</resources>
